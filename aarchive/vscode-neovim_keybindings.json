[
  // TERMINAL
  {
    "key": "ctrl+shift+a",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+shift+b",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+shift+j",
    "command": "workbench.action.togglePanel"
  },
  {
    "key": "ctrl+shift+n",
    "command": "workbench.action.terminal.new",
    "when": "terminalFocus"
  },

  // FILE TREE
  {
    "command": "workbench.action.toggleSidebarVisibility",
    "key": "alt+e",
    "when": "filesExplorerFocus"
  },
  {
    "command": "workbench.explorer.fileView.focus",
    "key": "alt+e",
    "when": "!filesExplorerFocus"
  },
  {
    "command": "workbench.action.toggleSidebarVisibility",
    "key": "ctrl+e"
  },
  {
    "key": "n",
    "command": "explorer.newFile",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "command": "renameFile",
    "key": "r",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "shift+n",
    "command": "explorer.newFolder",
    "when": "explorerViewletFocus"
  },
  {
    "command": "deleteFile",
    "key": "d",
    "when": "filesExplorerFocus && !inputFocus"
  },

  // Zen Mode
  {
    "key": "ctrl+z",
    "command": "workbench.action.toggleZenMode"
  },

  // NOTEBOOK
  {
    "key": "alt+x",
    "command": "notebook.cell.quitEdit",
    // "when": "inputFocus && notebookEditorFocused && vim.active && !editorHasSelection && !editorHoverVisible && vim.mode == 'Normal'"
    "when": "inputFocus && notebookEditorFocused && !editorHasSelection && !editorHoverVisible"
  },
  {
    "key": "escape",
    "command": "-notebook.cell.quitEdit",
    "when": "inputFocus && notebookEditorFocused && vim.active && !editorHasSelection && !editorHoverVisible && vim.mode == 'Normal'"
  },
  {
    "key": "ctrl+alt+pageup",
    "command": "-notebook.focusPreviousEditor",
    "when": "notebookEditorFocused"
  },
  {
    "key": "ctrl+alt+pagedown",
    "command": "-notebook.focusNextEditor",
    "when": "notebookEditorFocused"
  },
  {
    "key": "z z",
    "command": "notebook.centerActiveCell",
    "when": "notebookEditorFocused && vim.active && !editorHasSelection && !editorHoverVisible && vim.mode == 'Normal'"
  },
  {
    "key": "ctrl+l",
    "command": "-notebook.centerActiveCell",
    "when": "notebookEditorFocused"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "notebook.cell.execute",
    "when": "notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0"
  },
  {
    "key": "meta+enter",
    "command": "-notebook.cell.execute",
    "when": "notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0"
  },
  {
    "key": "o",
    "command": "notebook.cell.edit",
    "when": "notebookCellListFocused && notebookEditable && !editorHoverFocused && !inputFocus"
  },
  {
    "key": "ctrl+j",
    "command": "-workbench.action.togglePanel"
  },
  {
    "key": "shift+k",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": [
        "notebook.focusPreviousEditor",
        "notebook.centerActiveCell",
        "cursorTop"
      ]
    },
    "when": "inputFocus && notebookEditorFocused && !editorHasSelection && !editorHoverVisible && neovim.mode != insert"
    //"when": "inputFocus && notebookEditorFocused && vim.active && !editorHasSelection && !editorHoverVisible && vim.mode == 'Normal'"
  },
  {
    "key": "shift+j",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": [
        "notebook.focusNextEditor",
        "notebook.centerActiveCell",
        "cursorTop"
      ]
    },
    "when": "inputFocus && notebookEditorFocused && !editorHasSelection && !editorHoverVisible && neovim.mode != insert"
  },
  {
    "key": "shift+j",
    "command": "list.focusDown",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused && neovim.mode != insert"
  },
  {
    "key": "shift+k",
    "command": "list.focusUp",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused && neovim.mode != insert"
  },
  {
    "key": "escape",
    "command": "-notebook.cell.quitEdit",
    "when": "inputFocus && notebookEditorFocused && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible && !inlineChatFocused"
  },
  {
    "key": "escape",
    "command": "-notebook.cell.quitEdit",
    "when": "notebookEditorFocused && notebookOutputFocused"
  },
  {
    "key": "escape",
    "command": "-notebook.cell.chat.discard",
    "when": "inlineChatFocused && notebookCellChatFocused && !notebookChatUserDidEdit"
  },
  {
    "key": "escape",
    "command": "-notebook.cell.chat.acceptChanges",
    "when": "inlineChatFocused && notebookCellChatFocused && notebookChatUserDidEdit"
  },
  {
    "key": "ctrl+shift+d",
    "command": "notebook.clearAllCellsOutputs"
  },
  {
    "key": "ctrl+shift+c",
    "command": "notebook.interruptExecution"
  },

  // NOTEBOOK execute
  {
    "key": "meta+enter",
    "command": "-notebook.cell.execute",
    "when": "notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || !notebookCellExecuting && notebookCellType == 'code' && notebookCellListFocused || inlineChatFocused && notebookCellChatFocused && notebookKernelCount > 0 || !notebookCellExecuting && notebookCellType == 'code' && notebookCellListFocused || inlineChatFocused && notebookCellChatFocused && notebookKernelSourceCount > 0 || inlineChatFocused && notebookCellChatFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code'"
  },
  {
    "key": "ctrl+shift+x",
    "command": "-workbench.view.extensions",
    "when": "viewContainer.workbench.view.extensions.enabled"
  },
  {
    "key": "ctrl+shift+x",
    "command": "notebook.execute"
  },

  // GROUPS
  {
    "key": "alt+h",
    "command": "workbench.action.focusLeftGroup",
    "when": "!(vim.mode == 'Insert') && !(vim.mode == 'Visual') && !(vim.mode == 'VisualBlock') && !(vim.mode == 'VisualLine')"
  },
  {
    "key": "alt+l",
    "command": "workbench.action.focusRightGroup",
    "when": "!(vim.mode == 'Insert') && !(vim.mode == 'Visual') && !(vim.mode == 'VisualBlock') && !(vim.mode == 'VisualLine')"
  },

  // TABS
  {
    "key": "alt+k",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "alt+j",
    "command": "workbench.action.previousEditor"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.nextEditor",
    "when": "!(vim.mode == 'Insert') && !(vim.mode == 'Visual') && !(vim.mode == 'VisualBlock') && !(vim.mode == 'VisualLine')"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.previousEditor",
    "when": "!(vim.mode == 'Insert') && !(vim.mode == 'Visual') && !(vim.mode == 'VisualBlock') && !(vim.mode == 'VisualLine')"
  },
  {
    "key": "ctrl+w",
    "command": "-extension.vim_ctrl+w",
    "when": "editorTextFocus && vim.active && vim.use<C-w> && !inDebugRepl"
  },

  // OPEN stuff
  {
    "key": "ctrl+o",
    "command": "workbench.action.quickOpenNavigateNextInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "alt+o",
    "command": "workbench.action.quickOpenNavigateNextInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "ctrl+o",
    "command": "workbench.action.quickOpen"
  },
  {
    "key": "alt+o",
    "command": "workbench.action.quickOpen"
  },
  {
    "key": "ctrl+p",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "ctrl+p",
    "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "ctrl+shift+o",
    "command": "-workbench.action.gotoSymbol",
    "when": "!accessibilityHelpIsShown && !accessibleViewIsShown"
  },
  {
    "key": "ctrl+shift+o",
    "command": "workbench.action.files.openFolderViaWorkspace",
    "when": "!openFolderWorkspaceSupport && workbenchState == 'workspace'"
  },
  {
    "key": "ctrl+o",
    "command": "-workbench.action.files.openFolderViaWorkspace",
    "when": "!openFolderWorkspaceSupport && workbenchState == 'workspace'"
  },
  {
    "key": "ctrl+shift+o",
    "command": "workbench.action.files.openFolder",
    "when": "openFolderWorkspaceSupport"
  },
  {
    "key": "ctrl+k ctrl+o",
    "command": "-workbench.action.files.openFolder",
    "when": "openFolderWorkspaceSupport"
  },
  {
    "key": "ctrl+shift+o",
    "command": "workbench.action.files.openFile",
    "when": "true"
  },
  {
    "key": "ctrl+o",
    "command": "-workbench.action.files.openFile",
    "when": "true"
  },
  {
    "key": "ctrl+shift+o",
    "command": "workbench.action.files.openFileFolder",
    "when": "isMacNative && openFolderWorkspaceSupport"
  },
  {
    "key": "ctrl+o",
    "command": "-workbench.action.files.openFileFolder",
    "when": "isMacNative && openFolderWorkspaceSupport"
  },
  {
    "key": "ctrl+shift+o",
    "command": "workbench.action.files.openLocalFile",
    "when": "remoteFileDialogVisible"
  },
  {
    "key": "ctrl+o",
    "command": "-workbench.action.files.openLocalFile",
    "when": "remoteFileDialogVisible"
  },

  // remove Bindings that are in the way
  {
    "key": "ctrl+o",
    "command": "-extension.vim_ctrl+o",
    "when": "editorTextFocus && vim.active && vim.use<C-o> && !inDebugRepl"
  },
  {
    "key": "ctrl+p",
    "command": "-extension.vim_ctrl+p",
    "when": "editorTextFocus && vim.active && vim.use<C-p> && !inDebugRepl || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
  },
  {
    "key": "ctrl+shift+d",
    "command": "-workbench.view.debug",
    "when": "viewContainer.workbench.view.debug.enabled"
  },
  {
    "key": "ctrl+k ctrl+j",
    "command": "-editor.unfoldAll",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+shift+j",
    "command": "-workbench.action.search.toggleQueryDetails",
    "when": "inSearchEditor || searchViewletFocus"
  },
  {
    "key": "ctrl+shift+k",
    "command": "-editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+h",
    "command": "-editor.action.startFindReplaceAction",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "key": "ctrl+l",
    "command": "-workbench.action.chat.newChat",
    "when": "hasChatProvider && inChat"
  },
  {
    "key": "ctrl+l",
    "command": "-expandLineSelection",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+p",
    "command": "workbench.action.showCommands"
  },
  {
    "key": "alt+p",
    "command": "workbench.action.showCommands"
  },
  {
    "key": "alt+w",
    "command": "workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.closeActiveEditor"
  },
  // ALT stuff
  {
    "key": "alt+w",
    "command": "workbench.action.closeGroup",
    "when": "activeEditorGroupEmpty && multipleEditorGroups"
  },
  {
    "key": "alt+w",
    "command": "workbench.action.terminal.killEditor",
    "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated || terminalEditorFocus && terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+t",
    "command": "welcome.showNewFileEntries"
  },
  {
    "key": "alt+s",
    "command": "workbench.action.files.save"
  },
  // comment
  {
    "command": "editor.action.commentLine",
    "key": "alt+c",
    "when": "editorTextFocus && neovim.mode != insert"
  }
]

